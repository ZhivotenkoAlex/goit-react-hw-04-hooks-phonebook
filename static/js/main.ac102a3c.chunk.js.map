{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactList/ContactList.jsx","components/NameForm/NameForm.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","hooks/useLocalStorage.jsx","reportWebVitals.js","index.js","components/NameForm/NameForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onDeleteContact","map","id","name","phone","className","s","container","button","type","onClick","Nameform","onSubmit","useState","setName","setPhone","contact","nameInputId","shortid","generate","phoneInputId","handleChange","event","target","value","form","preventDefault","label","onChange","Filter","Container","children","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","find","toLowerCase","alert","prevContacts","currentTarget","includes","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac102a3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2wZ5b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Rtqk\"};","  \r\nimport React from 'react';\r\nimport s from './ContactList.module.css';\r\n\r\n\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul >\r\n    {contacts.map(({ id, name,phone }) => (\r\n      <li className={ s.container} key={id} >\r\n        <p className={ s.name}>{name}</p>\r\n        <p className={ s.name}>{phone}</p>\r\n        <button className={ s.button} type=\"button\" onClick={() => onDeleteContact(id)}>Удалить</button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;","import { useState} from 'react';\r\nimport shortid from 'shortid';\r\nimport s from './NameForm.module.css';\r\n\r\nexport default function Nameform({onSubmit}) {\r\n    \r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n     const contact = { name, phone };\r\n    \r\n    const nameInputId = shortid.generate();\r\n    const phoneInputId = shortid.generate();\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'phone':\r\n                setPhone(value);\r\n                break;\r\n            default: return;\r\n        };\r\n    };\r\n    \r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        onSubmit(contact);\r\n\r\n        setName('');\r\n        setPhone('');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form className={s.form} onSubmit={handleSubmit}>\r\n                <div className={s.container}>\r\n                    <label className={s.label}>\r\n                        Name\r\n                            <input\r\n                            type=\"text\"\r\n                            name='name'\r\n                            value={name}\r\n                            onChange={handleChange}\r\n                            id={nameInputId}\r\n                        />\r\n                    </label >\r\n                    <label className={s.label}>\r\n                        Phone\r\n                             <input\r\n                            type=\"text\"\r\n                            name='phone'\r\n                            value={phone}\r\n                            onChange={handleChange}\r\n                            id={phoneInputId}\r\n                        />\r\n                    </label>\r\n                        \r\n\r\n                    <button className={s.button} type='submit'>Add contact</button>\r\n\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n\r\n\r\n};\r\n\r\n\r\n\r\n//  class NameForm extends Component{\r\n//     state = {\r\n//         name: '',\r\n//         phone: '',\r\n//         id:''\r\n//     };\r\n\r\n//     nameInputId = shortid.generate();\r\n//     phoneInputId = shortid.generate();\r\n\r\n//     handleChange = event => {\r\n//         const { name, value } = event.currentTarget;\r\n//         this.setState({ [name]: value });\r\n        \r\n//     };\r\n\r\n//     handleSubmit = event => {\r\n//         event.preventDefault();\r\n       \r\n//        this.props.onSubmit(this.state);\r\n\r\n//         this.setState({ name: '', phone:''})\r\n\r\n//     }\r\n\r\n    \r\n//     render() {\r\n//         const { name, phone } = this.state;\r\n//         return (\r\n//             <>\r\n//                 <form className={s.form } onSubmit={this.handleSubmit}>\r\n//                 <div className={s.container}>\r\n//                      <label className={s.label}>\r\n//                             Name\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 name='name'\r\n//                                 value={name}\r\n//                                 onChange={this.handleChange}\r\n//                                 id={this.nameInputId}\r\n//                             />\r\n//                         </label >\r\n//                         <label className={s.label}>\r\n//                             Phone\r\n//                              <input\r\n//                                 type=\"text\"\r\n//                                 name='phone'\r\n//                                 value={phone}\r\n//                                 onChange={this.handleChange}\r\n//                                 id={this.phoneInputId}\r\n//                             />\r\n//                         </label>\r\n                        \r\n\r\n//                      <button className={s.button} type='submit'>Add contact</button>\r\n\r\n//                     </div>\r\n//                     </form>\r\n//             </>\r\n//         )\r\n//     }\r\n\r\n// }\r\n\r\n// export default NameForm;","import React from 'react';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={ s.label}>\r\n        Name filter <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n);\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","// import React, { Component } from 'react';\r\nimport { useState } from 'react';\r\nimport useLocalStorage from '../src/hooks/useLocalStorage';\r\n\r\nimport shortid from 'shortid';\r\n\r\nimport ContactList from './components/ContactList';\r\n\r\nimport NameForm from './components/NameForm/NameForm';\r\nimport Filter from './components/Filter';\r\nimport Container from './components/Container';\r\n\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useLocalStorage( 'contacts',[\r\n    { \"id\": \"id-1\", \"name\": \"John Piters\", \"phone\": \"555-55-55\" },\r\n    { \"id\": \"id-2\", \"name\": \"Piter Johnson\", \"phone\": \"444-44-44\" },\r\n    { \"id\": \"id-3\", \"name\": \"Pit Ivans\", \"phone\": \"333-33-33\" },\r\n    { \"id\": \"id-4\", \"name\": \"Ivan Piterson\", \"phone\": \"222-22-22\" }\r\n]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  function addContact({ name, phone }) {\r\n    const contact = {\r\n        id: shortid.generate(),\r\n        name,\r\n        phone\r\n      }\r\n  \r\n    contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase()) ||\r\n    contacts.find(contact => contact.phone.toLowerCase() === phone.toLowerCase())   \r\n      ? alert(`${name} or ${phone} is already added.`) \r\n      : setContacts(prevContacts =>[contact, ...prevContacts]); \r\n   \r\n  };\r\n\r\n  function deleteContact (contactId) {\r\n       \r\n    setContacts(() => contacts.filter(contact => contact.id !== contactId));\r\n  };\r\n  \r\n    function changeFilter (event) {\r\n    setFilter(event.currentTarget.value);\r\n  };\r\n\r\n  function getVisibleContacts() {\r\n    return(contacts.filter(contact =>contact.name.toLowerCase().includes(filter.toLowerCase())));}\r\n    \r\n    return (\r\n       \r\n       <Container>\r\n       <h1 className=\"title\"> Phonebook </h1>\r\n       <h2 className=\"subtitle\">Add new contact</h2>\r\n       <NameForm onSubmit={addContact} />\r\n       <h2 className=\"subtitle\">Find contact</h2>\r\n       <Filter value={filter} onChange={changeFilter} />\r\n       <h2 className=\"subtitle\">Contact list</h2>\r\n       <ContactList contacts = { getVisibleContacts() }\r\n         onDeleteContact = {deleteContact}/>\r\n       </Container>\r\n    )\r\n}\r\n\r\n// class App extends Component {\r\n//     state = {\r\n//         contacts: initialContacts,\r\n//       name: '',\r\n//       filter:''\r\n//     };\r\n\r\n//   addContact = ({name,phone}) => {\r\n//     const contact = {\r\n//       id: shortid.generate(),\r\n//       name,\r\n//       phone\r\n//     };\r\n\r\n//     const { contacts } = this.state;\r\n\r\n  //     contacts.find(({ name }) => name.toLowerCase() === contact.name.toLowerCase() )\r\n  //       ? alert(`${name} is already added.`)\r\n  //       : this.setState(({ contacts }) => ({ contacts: [...contacts, contact] }))\r\n\r\n\r\n//   };\r\n\r\n//     deleteContact = contactId => {\r\n//         this.setState(prevState => ({\r\n//             contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n//         }));\r\n//     };\r\n\r\n  // changeFilter = event => {\r\n  //   this.setState({ filter: event.currentTarget.value });\r\n  // };\r\n\r\n  // getVisibleContacts = () => {\r\n  //   const { filter, contacts } = this.state;\r\n  //   const normalizedFilter = filter.toLowerCase();\r\n\r\n  //   return contacts.filter(contact =>\r\n  //     contact.name.toLowerCase().includes(normalizedFilter),\r\n  //   );\r\n  // };\r\n\r\n// componentDidMount() {\r\n//     const contacts = localStorage.getItem(\"contacts\");\r\n//     const parsedContacts = JSON.parse(contacts);\r\n//     console.log(parsedContacts);\r\n\r\n//   if (parsedContacts) {\r\n//     this.setState({ contacts:parsedContacts})\r\n// }\r\n\r\n//   }\r\n\r\n// componentDidUpdate(prevProps, prevState) {\r\n//         if (this.state.contacts !== prevState.contacts) {\r\n//          localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n//           }\r\n//     }\r\n\r\n//     render() {  \r\n//       const { filter  } = this.state;\r\n//       const visibleContacts = this.getVisibleContacts();\r\n//       return (\r\n//           <Container>\r\n//             <h1 className=\"title\"> Phonebook </h1>\r\n//           <h2 className=\"subtitle\">Add new contact</h2>\r\n//           <NameForm onSubmit={this.addContact} />\r\n//           <h2 className=\"subtitle\">Find contact</h2>\r\n//           <Filter value={filter} onChange={this.changeFilter} />\r\n//           <h2 className=\"subtitle\">Contact list</h2>\r\n//           <ContactList contacts = { visibleContacts }\r\n//             onDeleteContact = { this.deleteContact }/>\r\n//           </Container>\r\n\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default App;","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NameForm_form__3OlgQ\",\"container\":\"NameForm_container__1dL94\",\"label\":\"NameForm_label__21-IG\",\"input\":\"NameForm_input__YIAZv\",\"button\":\"NameForm_button__wZk2i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__2RfCM\",\"name\":\"ContactList_name__30SBa\",\"button\":\"ContactList_button__2GgBJ\"};"],"sourceRoot":""}